@startuml
!include <C4/C4_Component.puml>

AddBoundaryTag(integrationBoundaryTag, $bgColor="#C7E9B0", $legendText="Integration layer")
AddBoundaryTag(applicationBoundaryTag, $bgColor="#E3F2C1", $legendText="Application layer")
AddBoundaryTag(domainBoundaryTag, $bgColor="#F6FFDE", $legendText="Domain layer")

Container_Ext(spaContainer, "Single-Page Application", "React", "Provides our platform's functionality to users via web.")
Container_Ext(mobileAppContainer, "Mobile App", "Ionic", "Provides our platform's functionality to users via a mobile app.")
Container_Ext(frontendServerContainer, "Frontend Server", "Java Spring MVC", "Enables client apps to use our platform.")

Rel(spaContainer, frontendServerContainer, "Uses functionality of", "HTTP")
Rel(mobileAppContainer, frontendServerContainer, "Uses functionality of", "HTTP")

System_Boundary(identityBoundary, "Identity Service") {

    ContainerDb(database, "Database", "H2", "In-memory storage")

    System_Boundary(identityApplicationBoundary, "Identity Integration Layer", $tags="integrationBoundaryTag") {

        System_Boundary(identityApplicationBoundary, "Identity Application Layer", $tags="applicationBoundaryTag") {
            Component(application, "Application layer classes", "Java", "All application and domain layer classes.")
        }

        Component(randomUuidGenerator, "RandomUuidGenerator", "Java", "Generates user IDs as random UUIDs.")
        Rel_U(randomUuidGenerator, application, "Implements")

        Component(userController, "UserController", "Spring MVC", "Exposes use cases and queries via HTTP.")
        Rel(userController, application, "Verifies passwords")
        Rel(userController, application, "Registers users")

        Component(userEntity, "UserEntity", "JPA", "Model for storing the user in a database")
        Component(userJpaRepository, "UserJpaRepository", "Spring Data JPA", "Repository for persistence of UserEntities")
        Component(userPersistenceAdapter, "UserPersistenceAdapter", "Java", "Implementation of application layer outbound ports")

        Rel(userJpaRepository, userEntity, "Stores and loads")
        Rel_L(userJpaRepository, database, "Persists using")
        Rel(userPersistenceAdapter, database, "Persists using")
        Rel(userPersistenceAdapter, application, "Implements")
        Rel(userPersistenceAdapter, application, "Implements")


    }
}

Rel(frontendServerContainer, userController, "Verifies passwords", "HTTP")
Rel(frontendServerContainer, userController, "Registers users", "HTTP")

SHOW_LEGEND()

@enduml
